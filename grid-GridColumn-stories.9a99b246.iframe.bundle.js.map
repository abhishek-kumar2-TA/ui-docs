{"version":3,"file":"grid-GridColumn-stories.9a99b246.iframe.bundle.js","mappings":";AAyCA;;AAEA;AACA;AACA;;;;;AAKA;;;;AAZA;;AAoBA","sources":["webpack://storybook-ui/./src/grid/GridColumn.stories.ts"],"sourcesContent":["import type { Meta, StoryFn } from '@storybook/web-components';\n\nimport '@tiger-analytics/ui';\n\nimport { html } from 'lit';\n\nexport default {\n  title: 'Grid/ta-grid-column',\n  component: 'ta-grid-column',\n  tags: ['autodocs'],\n  argTypes: {\n    sm: {\n      control: 'number',\n      type: 'number',\n      description: 'number of columns to use on small screen',\n      table: {\n        defaultValue: { summary: '6' },\n      },\n    },\n    md: {\n      control: 'number',\n      type: 'number',\n      description: 'number of columns to use on medium screen',\n      table: {\n        defaultValue: { summary: '12' },\n      },\n    },\n    lg: {\n      control: 'number',\n      type: 'number',\n      description: 'number of columns to use on large screen',\n      table: {\n        defaultValue: { summary: '12' },\n      },\n    },\n  },\n} as Meta;\n\nconst description = `The <ta-grid-column> web component is used to create child elements within a grid container, allowing for flexible column spans. You can specify the number of columns the element should occupy using the span attribute. This enables easy control over the width of child elements relative to the grid container. <ta-grid-column> is designed to be used inside a <ta-grid-container>, and its span value determines how much space it should occupy in the grid, ensuring a fluid and adaptive layout.`;\n\nconst Template: StoryFn = (args) => html`\n  <ta-grid-container style=\"background: violet;\" .showSideMargin=\"${false}\">\n    <ta-grid-column\n      .sm=\"${args.sm}\"\n      .md=\"${args.md}\"\n      .lg=\"${args.lg}\"\n      style=\"background: yellowgreen;\"\n      >Column</ta-grid-column\n    >\n  </ta-grid-container>\n  <ta-grid-container .showSideMargin=\"${false}\">\n    <ta-grid-column\n      ><div class=\"story-title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></ta-grid-column\n    >\n    <ta-grid-column><div class=\"story-description\">${description}</div></ta-grid-column>\n  </ta-grid-container>\n`;\n\nexport const CodeAndAccessibility = Template.bind({});\nCodeAndAccessibility.args = {\n  sm: 6,\n  md: 12,\n  lg: 12,\n};\n"],"names":[],"sourceRoot":""}