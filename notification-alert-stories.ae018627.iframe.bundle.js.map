{"version":3,"file":"notification-alert-stories.ae018627.iframe.bundle.js","mappings":";AAuEA;;;;AAIA;AACA;AAlBA;;;;;AAwBA;AACA;AACA;AACA;AArBA;;;;;;;;AAbA;;;AA8CA","sources":["webpack://storybook-ui/./src/notification/alert.stories.ts"],"sourcesContent":["import type { Meta, StoryFn } from '@storybook/web-components';\nimport { html } from 'lit';\nimport { ButtonSize, ButtonVariant } from '@tiger-analytics/ui/button';\nimport { AlertComponentWC, NotificationVariant } from '@tiger-analytics/ui';\n\nexport default {\n  title: 'Notification/ta-alert',\n  component: 'ta-alert',\n  parameters: {\n    controls: { expanded: true },\n  },\n  argTypes: {\n    'id': {\n      description: 'Mandatory - unique id for testing',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    'visible': {\n      description: 'Determines if the notification is visible',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n      control: false,\n    },\n    'title': {\n      description: 'The title of the notification',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    'variant': {\n      options: [NotificationVariant.Error, NotificationVariant.Info],\n      description: 'The style variant of the notification',\n      table: {\n        defaultValue: { summary: NotificationVariant.Error },\n      },\n      control: { type: 'select' },\n    },\n    'on-close': {\n      description: 'Triggered when the close button is clicked',\n      table: {\n        category: 'Events',\n      },\n      control: false,\n    },\n  },\n} as Meta;\n\nconst description = `\nThe ta-notification component is used to display alerts or messages to the user. It supports different variants (info and error) and visibility control. The component includes a close button to dismiss the notification.\n`;\n\nconst Template: StoryFn = (args) => {\n  let isVisible = args.visible || false;\n\n  const toggleNotification = () => {\n    isVisible = !isVisible;\n    const alertNotification = document.getElementById(args.id) as AlertComponentWC;\n    alertNotification.visible = isVisible;\n  };\n\n  const onCloseHandler = () => {\n    isVisible = false;\n    const alertNotification = document.getElementById(args.id) as AlertComponentWC;\n    alertNotification.visible = isVisible;\n  };\n\n  return html`\n    <ta-grid-container .showSideMargin=\"${false}\">\n      <ta-grid-column\n        ><ta-button\n          id=\"toggle-button\"\n          .variant=\"${ButtonVariant.Primary}\"\n          .size=\"${ButtonSize.Default}\"\n          @click=\"${toggleNotification}\">\n          Toggle Notification\n        </ta-button>\n\n        <ta-alert\n          id=\"${args.id}\"\n          .visible=\"${isVisible}\"\n          .title=\"${args.title}\"\n          .variant=\"${args.variant}\"\n          @on-close=\"${onCloseHandler}\">\n          <p>This is a notification message.</p>\n        </ta-alert></ta-grid-column\n      >\n      <ta-grid-column>\n        <div class=\"story-title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n      </ta-grid-column>\n      <ta-grid-column>\n        <div class=\"story-description\">${description}</div>\n      </ta-grid-column>\n    </ta-grid-container>\n  `;\n};\n\nexport const CodeAndAccessibility = Template.bind({});\nCodeAndAccessibility.args = {\n  id: 'test-notification',\n  visible: false,\n  title: 'This is a notification',\n  variant: 'error',\n};\n"],"names":[],"sourceRoot":""}