{"version":3,"file":"formFields-textInput-stories.bea28d97.iframe.bundle.js","mappings":";AA6HA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAxBA;;AAmCA","sources":["webpack://storybook-ui/./src/formFields/textInput.stories.ts"],"sourcesContent":["import type { Meta, StoryFn } from '@storybook/web-components';\n\nimport { html } from 'lit';\n\nimport { FieldSize } from '@tiger-analytics/ui';\n\nexport default {\n  title: 'Form/ta-input',\n  component: 'ta-input',\n  parameters: {\n    controls: { expanded: true },\n  },\n  argTypes: {\n    id: {\n      description: 'Mandatory - unique id for testing',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    label: {\n      description: 'Label for the input',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    description: {\n      description: 'Additional description for the field',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    value: {\n      description: 'value of the input field',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    placeholder: {\n      description: 'Placeholder text',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    type: {\n      options: ['text', 'password', 'email', 'number'],\n      description: 'type of the input',\n      table: {\n        defaultValue: { summary: 'text' },\n      },\n      control: { type: 'select' },\n    },\n    size: {\n      options: [FieldSize.Default, FieldSize.Small],\n      description: 'size of the input',\n      table: {\n        defaultValue: { summary: FieldSize.Default },\n      },\n      control: { type: 'select' },\n    },\n    disabled: {\n      description: 'enable or disable the input',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n      control: 'boolean',\n    },\n    required: {\n      description: 'mark input as required',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n      control: 'boolean',\n    },\n    minlength: {\n      description: 'minimum length for the input',\n      table: {\n        defaultValue: { summary: '0' },\n      },\n      control: 'number',\n    },\n    maxlength: {\n      description: 'maximum length for the input',\n      table: {\n        defaultValue: { summary: '524288' },\n      },\n      control: 'number',\n    },\n    pattern: {\n      description: 'input pattern',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    input: {\n      description: 'Triggered when the input value is modified',\n      table: {\n        category: 'Events',\n      },\n      control: false,\n    },\n    focus: {\n      description: 'Focuses the text input',\n      table: {\n        category: 'Methods',\n      },\n      control: false,\n    },\n  },\n} as Meta;\n\nconst description = `ta-input is a customizable input field component. It supports various input types such as text, password, email, and number, and allows customization of attributes like label, placeholder, size, and validation properties (e.g., required, minlength, maxlength, pattern). The component also includes support for descriptions, focus management, and input change handling, making it a versatile solution for forms and user input fields.`;\n\nconst Template: StoryFn = (args) => {\n  const inputChangeHandler = (event: Event) => {\n    const inputTarget = event.target as HTMLInputElement;\n    const outputElement = document.getElementById('entered-text');\n    if (outputElement) outputElement.innerHTML = inputTarget.value;\n  };\n  return html`\n    <ta-grid-container .showSideMargin=\"${false}\">\n      <ta-grid-column>\n        <ta-input\n          id=\"${args.id}\"\n          .label=\"${args.label}\"\n          .size=\"${args.size}\"\n          ?disabled=\"${args.disabled}\"\n          .description=\"${args.description}\"\n          .type=\"${args.type}\"\n          .value=\"${args.value}\"\n          .placeholder=\"${args.placeholder}\"\n          .required=\"${args.required}\"\n          .minlength=\"${args.minlength}\"\n          .maxlength=\"${args.maxlength}\"\n          .pattern=\"${args.pattern}\"\n          @input=\"${(e: Event) => inputChangeHandler(e)}\"></ta-input>\n        <p>Entered text: <span id=\"entered-text\"></span></p>\n      </ta-grid-column>\n      <ta-grid-column\n        ><div class=\"story-title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div></ta-grid-column\n      >\n      <ta-grid-column><div class=\"story-description\">${description}</div></ta-grid-column>\n    </ta-grid-container>\n  `;\n};\n\nexport const CodeAndAccessibility = Template.bind({});\nCodeAndAccessibility.args = {\n  id: 'test-input',\n  label: 'Label',\n  size: FieldSize.Default,\n  disabled: false,\n  description: 'Some description',\n  type: 'text',\n  value: '',\n  placeholder: 'Enter text',\n  required: false,\n  minlength: 0,\n  maxlength: 524288,\n  pattern: '',\n};\n"],"names":[],"sourceRoot":""}