"use strict";(self.webpackChunkstorybook_ui=self.webpackChunkstorybook_ui||[]).push([[867],{"./src/icons/icon.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lit__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lit/index.js");const iconComponents=__webpack_require__("../../packages/ui/dist/icons/index.js"),__WEBPACK_DEFAULT_EXPORT__={title:"Icons",parameters:{controls:{expanded:!0}},argTypes:{fill:{description:"Color of the icon (fill property)",table:{defaultValue:{summary:"var(--colors-primary-base)"}},control:"color"},width:{description:"Width of the icon",table:{defaultValue:{summary:"24px"}},control:"text"},height:{description:"Height of the icon",table:{defaultValue:{summary:"24px"}},control:"text"},isAriaHidden:{description:"A11Y - Determines if the icon is hidden from screen readers",table:{defaultValue:{summary:"true"}},control:"boolean"}}},CodeAndAccessibility=(args=>(requestAnimationFrame((()=>{const container=document.querySelector("#icon-container");if(container){let iconsHtml="";Object.keys(iconComponents).forEach((iconKey=>{const iconComponent=new iconComponents[iconKey],iconHtml=`<${iconComponent.localName} \n            fill="${args.fill}" \n            width="${args.width}" \n            height="${args.height}" \n            isAriaHidden="${args.isAriaHidden}">\n          </${iconComponent.localName}>`;iconsHtml+=`<div style="text-align: center;width: 200px;margin-bottom: 2rem;">\n                          ${iconHtml}\n                          <div>${iconComponent.localName}</div>\n                        </div>`})),container.innerHTML=iconsHtml}})),lit__WEBPACK_IMPORTED_MODULE_0__.qy`
    <div>
      <ta-grid-container .showSideMargin="${!1}">
        <ta-grid-column>
          <div id="icon-container" style="display: flex; gap: 40px; flex-wrap: wrap;"></div>
        </ta-grid-column>
      </ta-grid-container>
    </div>
  `)).bind({});CodeAndAccessibility.args={fill:"",width:"24px",height:"24px",isAriaHidden:!0};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:'args => {\n  const renderIcons = () => {\n    requestAnimationFrame(() => {\n      const container = document.querySelector(\'#icon-container\');\n      if (container) {\n        let iconsHtml = \'\';\n        Object.keys(iconComponents).forEach(iconKey => {\n          const iconComponent = new iconComponents[iconKey]();\n          const iconHtml = `<${iconComponent.localName} \n            fill="${args.fill}" \n            width="${args.width}" \n            height="${args.height}" \n            isAriaHidden="${args.isAriaHidden}">\n          </${iconComponent.localName}>`;\n          iconsHtml += `<div style="text-align: center;width: 200px;margin-bottom: 2rem;">\n                          ${iconHtml}\n                          <div>${iconComponent.localName}</div>\n                        </div>`;\n        });\n        container.innerHTML = iconsHtml;\n      }\n    });\n  };\n  renderIcons();\n  return html`\n    <div>\n      <ta-grid-container .showSideMargin="${false}">\n        <ta-grid-column>\n          <div id="icon-container" style="display: flex; gap: 40px; flex-wrap: wrap;"></div>\n        </ta-grid-column>\n      </ta-grid-container>\n    </div>\n  `;\n}',...CodeAndAccessibility.parameters?.docs?.source}}}}}]);
//# sourceMappingURL=icons-icon-stories.961cd008.iframe.bundle.js.map