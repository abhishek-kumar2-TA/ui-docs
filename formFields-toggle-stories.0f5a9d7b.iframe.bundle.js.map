{"version":3,"file":"formFields-toggle-stories.0f5a9d7b.iframe.bundle.js","mappings":";AA0FA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAnBA;;;AAgCA","sources":["webpack://storybook-ui/./src/formFields/toggle.stories.ts"],"sourcesContent":["import type { Meta, StoryFn } from '@storybook/web-components';\n\nimport { html } from 'lit';\n\nimport { FieldSize } from '@tiger-analytics/ui';\n\nexport default {\n  title: 'Form/ta-toggle',\n  component: 'ta-toggle',\n  parameters: {\n    controls: { expanded: true },\n  },\n  argTypes: {\n    id: {\n      description: 'Mandatory - unique id for testing',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    label: {\n      description: 'Label for the toggle switch',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    description: {\n      description: 'Additional description for the toggle field',\n      table: {\n        defaultValue: { summary: '' },\n      },\n      control: 'text',\n    },\n    checked: {\n      description: 'Whether the toggle is in the \"on\" position',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n      control: 'boolean',\n    },\n    disabled: {\n      description: 'Enable or disable the toggle switch',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n      control: 'boolean',\n    },\n    required: {\n      description: 'Mark toggle as required',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n      control: 'boolean',\n    },\n    size: {\n      options: [FieldSize.Default, FieldSize.Small],\n      description: 'Size of the toggle switch',\n      table: {\n        defaultValue: { summary: FieldSize.Default },\n      },\n      control: { type: 'select' },\n    },\n    change: {\n      description: 'Triggered when the toggle value is changed',\n      table: {\n        category: 'Events',\n      },\n      control: false,\n    },\n    focus: {\n      description: 'Focuses the toggle switch',\n      table: {\n        category: 'Methods',\n      },\n      control: false,\n    },\n  },\n} as Meta;\n\nconst description = `ta-toggle is a custom toggle switch component.`;\n\nconst Template: StoryFn = (args) => {\n  const toggleChangeHandler = (event: Event) => {\n    const toggleTarget = event.target as HTMLInputElement;\n    const outputElement = document.getElementById('toggle-status');\n    if (outputElement) outputElement.innerHTML = toggleTarget.checked ? 'On' : 'Off';\n  };\n\n  return html`\n    <ta-grid-container .showSideMargin=\"${false}\">\n      <ta-grid-column>\n        <ta-toggle\n          id=\"${args.id}\"\n          .label=\"${args.label}\"\n          .size=\"${args.size}\"\n          ?disabled=\"${args.disabled}\"\n          .description=\"${args.description}\"\n          .required=\"${args.required}\"\n          @change=\"${(e: Event) => toggleChangeHandler(e)}\"></ta-toggle>\n        <p>Status: <span id=\"toggle-status\"></span></p>\n      </ta-grid-column>\n      <ta-grid-column>\n        <div class=\"story-title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n      </ta-grid-column>\n      <ta-grid-column>\n        <div class=\"story-description\">${description}</div>\n      </ta-grid-column>\n    </ta-grid-container>\n  `;\n};\n\nexport const CodeAndAccessibility = Template.bind({});\nCodeAndAccessibility.args = {\n  id: 'test-toggle',\n  label: 'Enable Notifications',\n  size: FieldSize.Default,\n  disabled: false,\n  description: 'Please toggle to enable or disable notifications.',\n  checked: false,\n  required: false,\n};\n"],"names":[],"sourceRoot":""}