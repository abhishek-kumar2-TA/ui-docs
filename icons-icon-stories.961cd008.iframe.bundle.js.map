{"version":3,"file":"icons-icon-stories.961cd008.iframe.bundle.js","mappings":";;AA4EA;;;;;;AASA","sources":["webpack://storybook-ui/./src/icons/icon.stories.ts"],"sourcesContent":["import { Meta, StoryFn } from '@storybook/web-components';\nimport { html } from 'lit';\nimport * as AllIcons from '@tiger-analytics/ui/icons';\n\nconst iconComponents: { [key: string]: CustomElementConstructor } = AllIcons;\n\nexport default {\n  title: 'Icons',\n  parameters: {\n    controls: { expanded: true },\n  },\n  argTypes: {\n    fill: {\n      description: 'Color of the icon (fill property)',\n      table: {\n        defaultValue: { summary: 'var(--colors-primary-base)' },\n      },\n      control: 'color',\n    },\n    width: {\n      description: 'Width of the icon',\n      table: {\n        defaultValue: { summary: '24px' },\n      },\n      control: 'text',\n    },\n    height: {\n      description: 'Height of the icon',\n      table: {\n        defaultValue: { summary: '24px' },\n      },\n      control: 'text',\n    },\n    isAriaHidden: {\n      description: 'A11Y - Determines if the icon is hidden from screen readers',\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n      control: 'boolean',\n    },\n  },\n} as Meta;\n\nconst Template: StoryFn = (args) => {\n  const renderIcons = () => {\n    requestAnimationFrame(() => {\n      const container = document.querySelector('#icon-container');\n\n      if (container) {\n        let iconsHtml = '';\n\n        Object.keys(iconComponents).forEach((iconKey) => {\n          const iconComponent = new iconComponents[iconKey]();\n\n          const iconHtml = `<${iconComponent.localName} \n            fill=\"${args.fill}\" \n            width=\"${args.width}\" \n            height=\"${args.height}\" \n            isAriaHidden=\"${args.isAriaHidden}\">\n          </${iconComponent.localName}>`;\n\n          iconsHtml += `<div style=\"text-align: center;width: 200px;margin-bottom: 2rem;\">\n                          ${iconHtml}\n                          <div>${iconComponent.localName}</div>\n                        </div>`;\n        });\n\n        container.innerHTML = iconsHtml;\n      }\n    });\n  };\n\n  renderIcons();\n\n  return html`\n    <div>\n      <ta-grid-container .showSideMargin=\"${false}\">\n        <ta-grid-column>\n          <div id=\"icon-container\" style=\"display: flex; gap: 40px; flex-wrap: wrap;\"></div>\n        </ta-grid-column>\n      </ta-grid-container>\n    </div>\n  `;\n};\n\nexport const CodeAndAccessibility = Template.bind({});\nCodeAndAccessibility.args = {\n  fill: '',\n  width: '24px',\n  height: '24px',\n  isAriaHidden: true,\n};\n"],"names":[],"sourceRoot":""}