"use strict";(self.webpackChunkstorybook_ui=self.webpackChunkstorybook_ui||[]).push([[823],{"./src/formFields/toggle.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var lit__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lit/index.js"),_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/ui/dist/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Form/ta-toggle",component:"ta-toggle",parameters:{controls:{expanded:!0}},argTypes:{id:{description:"Mandatory - unique id for testing",table:{defaultValue:{summary:""}},control:"text"},label:{description:"Label for the toggle switch",table:{defaultValue:{summary:""}},control:"text"},description:{description:"Additional description for the toggle field",table:{defaultValue:{summary:""}},control:"text"},checked:{description:'Whether the toggle is in the "on" position',table:{defaultValue:{summary:"false"}},control:"boolean"},disabled:{description:"Enable or disable the toggle switch",table:{defaultValue:{summary:"false"}},control:"boolean"},required:{description:"Mark toggle as required",table:{defaultValue:{summary:"false"}},control:"boolean"},size:{options:[_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__.S9.Default,_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__.S9.Small],description:"Size of the toggle switch",table:{defaultValue:{summary:_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__.S9.Default}},control:{type:"select"}},change:{description:"Triggered when the toggle value is changed",table:{category:"Events"},control:!1},focus:{description:"Focuses the toggle switch",table:{category:"Methods"},control:!1}}},CodeAndAccessibility=(args=>lit__WEBPACK_IMPORTED_MODULE_0__.qy`
    <ta-grid-container .showSideMargin="${!1}">
      <ta-grid-column>
        <ta-toggle
          id="${args.id}"
          .label="${args.label}"
          .size="${args.size}"
          ?disabled="${args.disabled}"
          .description="${args.description}"
          .required="${args.required}"
          @change="${e=>(event=>{const toggleTarget=event.target,outputElement=document.getElementById("toggle-status");outputElement&&(outputElement.innerHTML=toggleTarget.checked?"On":"Off")})(e)}"></ta-toggle>
        <p>Status: <span id="toggle-status"></span></p>
      </ta-grid-column>
      <ta-grid-column>
        <div class="story-title">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
      </ta-grid-column>
      <ta-grid-column>
        <div class="story-description">${"ta-toggle is a custom toggle switch component."}</div>
      </ta-grid-column>
    </ta-grid-container>
  `).bind({});CodeAndAccessibility.args={id:"test-toggle",label:"Enable Notifications",size:_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__.S9.Default,disabled:!1,description:"Please toggle to enable or disable notifications.",checked:!1,required:!1};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:'args => {\n  const toggleChangeHandler = (event: Event) => {\n    const toggleTarget = event.target as HTMLInputElement;\n    const outputElement = document.getElementById(\'toggle-status\');\n    if (outputElement) outputElement.innerHTML = toggleTarget.checked ? \'On\' : \'Off\';\n  };\n  return html`\n    <ta-grid-container .showSideMargin="${false}">\n      <ta-grid-column>\n        <ta-toggle\n          id="${args.id}"\n          .label="${args.label}"\n          .size="${args.size}"\n          ?disabled="${args.disabled}"\n          .description="${args.description}"\n          .required="${args.required}"\n          @change="${(e: Event) => toggleChangeHandler(e)}"></ta-toggle>\n        <p>Status: <span id="toggle-status"></span></p>\n      </ta-grid-column>\n      <ta-grid-column>\n        <div class="story-title">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n      </ta-grid-column>\n      <ta-grid-column>\n        <div class="story-description">${description}</div>\n      </ta-grid-column>\n    </ta-grid-container>\n  `;\n}',...CodeAndAccessibility.parameters?.docs?.source}}}}}]);
//# sourceMappingURL=formFields-toggle-stories.0f5a9d7b.iframe.bundle.js.map